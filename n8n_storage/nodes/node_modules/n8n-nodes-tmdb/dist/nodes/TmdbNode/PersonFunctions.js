"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPerson = getPerson;
const UrlFunctions_1 = require("./UrlFunctions");
async function getPerson(context, itemIndex) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const language = context.getNodeParameter('language', itemIndex);
    const personId = context.getNodeParameter('person_id', itemIndex);
    const appendToResponse = context.getNodeParameter('person_append_to_response', itemIndex);
    const response = await context.helpers.httpRequestWithAuthentication.call(context, 'tmdbApi', {
        headers: {
            Accept: 'application/json',
        },
        method: 'GET',
        url: `https://api.themoviedb.org/3/person/${personId}?language=${language}&append_to_response=${appendToResponse}`,
    });
    if (response.combined_credits) {
        response.combined_credits.cast = (_a = response.combined_credits.cast) === null || _a === void 0 ? void 0 : _a.map((cast) => ({
            ...cast,
            backdrop_urls: (0, UrlFunctions_1.getBackdropUrls)(cast.backdrop_path),
            poster_urls: (0, UrlFunctions_1.getPosterUrls)(cast.poster_path),
        }));
        response.combined_credits.crew = (_b = response.combined_credits.crew) === null || _b === void 0 ? void 0 : _b.map((crew) => ({
            ...crew,
            backdrop_urls: (0, UrlFunctions_1.getBackdropUrls)(crew.backdrop_path),
            poster_urls: (0, UrlFunctions_1.getPosterUrls)(crew.poster_path),
        }));
    }
    if (response.movie_credits) {
        response.movie_credits.cast = (_c = response.movie_credits.cast) === null || _c === void 0 ? void 0 : _c.map((cast) => ({
            ...cast,
            backdrop_urls: (0, UrlFunctions_1.getBackdropUrls)(cast.backdrop_path),
            poster_urls: (0, UrlFunctions_1.getPosterUrls)(cast.poster_path),
        }));
        response.movie_credits.crew = (_d = response.movie_credits.crew) === null || _d === void 0 ? void 0 : _d.map((crew) => ({
            ...crew,
            backdrop_urls: (0, UrlFunctions_1.getBackdropUrls)(crew.backdrop_path),
            poster_urls: (0, UrlFunctions_1.getPosterUrls)(crew.poster_path),
        }));
    }
    if (response.tv_credits) {
        response.tv_credits.cast = (_e = response.tv_credits.cast) === null || _e === void 0 ? void 0 : _e.map((cast) => ({
            ...cast,
            backdrop_urls: (0, UrlFunctions_1.getBackdropUrls)(cast.backdrop_path),
            poster_urls: (0, UrlFunctions_1.getPosterUrls)(cast.poster_path),
        }));
        response.tv_credits.crew = (_f = response.tv_credits.crew) === null || _f === void 0 ? void 0 : _f.map((crew) => ({
            ...crew,
            backdrop_urls: (0, UrlFunctions_1.getBackdropUrls)(crew.backdrop_path),
            poster_urls: (0, UrlFunctions_1.getPosterUrls)(crew.poster_path),
        }));
    }
    if (response.images) {
        response.images.profiles = (_h = (_g = response.images) === null || _g === void 0 ? void 0 : _g.profiles) === null || _h === void 0 ? void 0 : _h.map((profile) => ({
            ...profile,
            urls: (0, UrlFunctions_1.getProfileUrls)(profile.file_path),
        }));
    }
    return {
        ...response,
        profile_urls: (0, UrlFunctions_1.getProfileUrls)(response.profile_path),
    };
}
//# sourceMappingURL=PersonFunctions.js.map