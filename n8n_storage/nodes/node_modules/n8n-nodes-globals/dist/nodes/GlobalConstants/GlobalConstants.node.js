"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalConstants = void 0;
const GlobalConstantsCredentials_credentials_1 = require("../../credentials/GlobalConstantsCredentials.credentials");
const CredentialsUtils_1 = require("../../credentials/CredentialsUtils");
class GlobalConstants {
    constructor() {
        this.description = {
            displayName: 'Global Constants',
            name: 'globalConstants',
            icon: 'file:globals-icon-60px.png',
            group: ['transform', 'output'],
            version: 1,
            description: 'Global Constants',
            subtitle: '={{$parameter["resource"]}}',
            defaults: {
                name: 'Global Constants',
            },
            inputs: ['main'],
            outputs: ['main'],
            credentials: [
                {
                    name: GlobalConstantsCredentials_credentials_1.GLOBAL_CONSTANTS_CREDENTIALS_NAME,
                    required: true,
                }
            ],
            properties: [
                {
                    displayName: 'Put All Constants in One Key',
                    name: 'putAllInOneKey',
                    type: "boolean",
                    default: true,
                    description: "Whether to put all constants in one key or use separate keys for each constant",
                },
                {
                    displayName: "Constants Key Name",
                    name: "constantsKeyName",
                    type: "string",
                    default: "constants",
                    displayOptions: {
                        show: {
                            putAllInOneKey: [true],
                        },
                    },
                },
            ],
        };
    }
    async execute() {
        const credentials = await this.getCredentials(GlobalConstantsCredentials_credentials_1.GLOBAL_CONSTANTS_CREDENTIALS_NAME);
        const globalConstants = (0, CredentialsUtils_1.splitConstants)(credentials.globalConstants);
        var constantsData = {};
        const putAllInOneKey = this.getNodeParameter('putAllInOneKey', 0);
        if (putAllInOneKey) {
            const constantsKeyName = this.getNodeParameter('constantsKeyName', 0);
            constantsData = {
                [constantsKeyName]: globalConstants,
            };
        }
        else {
            constantsData = globalConstants;
        }
        const returnData = this.getInputData();
        if (returnData.length === 0) {
            returnData.push({ json: constantsData });
        }
        else {
            returnData.forEach((item) => {
                item.json = {
                    ...item.json,
                    ...constantsData,
                };
            });
        }
        return [returnData];
    }
}
exports.GlobalConstants = GlobalConstants;
//# sourceMappingURL=GlobalConstants.node.js.map